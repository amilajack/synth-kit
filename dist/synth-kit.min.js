(function(global,factory){typeof exports==="object"&&typeof module!=="undefined"?factory(exports):typeof define==="function"&&define.amd?define(["exports"],factory):factory(global.SynthKit=global.SynthKit||{})})(this,function(exports){"use strict";var commonjsGlobal=typeof window!=="undefined"?window:typeof global!=="undefined"?global:typeof self!=="undefined"?self:{};function createCommonjsModule(fn,module){return module={exports:{}},fn(module,module.exports),module.exports}var window_1=createCommonjsModule(function(module){if(typeof window!=="undefined"){module.exports=window}else if(typeof commonjsGlobal!=="undefined"){module.exports=commonjsGlobal}else{module.exports={}}});var index=createCommonjsModule(function(module){var window=window_1;var Context=window.AudioContext||window.webkitAudioContext;if(Context)module.exports=new Context});function isNum(n){return typeof n==="number"}var ac=index;function now(context){return(context||ac).currentTime}function samplingRate(context){return(context||ac).sampleRate}function plug(name,value,node){if(typeof value==="undefined"){}else if(typeof value.connect==="function"){node[name].value=0;value.connect(node[name]);return value}else if(node[name]){node[name].value=value}}function toTime(context,when,delay){return Math.max(context.currentTime,when||0)+(delay||0)}function bindLifecycle(node){return{connect:node.connect?node.connect.bind(node):null,disconnect:node.disconnect?node.disconnect.bind(node):null,start:node.start?node.start.bind(node):null,stop:node.stop?node.stop.bind(node):null}}function dispatch(event,value,node,dependents){if(node[event])node[event](value);dependents.forEach(function(dep){if(dep&&dep[event])dep[event](value)});return node}function lifecycle(node,dependents){var raw=bindLifecycle(node);node.connected=false;node.connect=function(dest){node.connected=true;raw.connect(dest);return node};node.disconnect=function(){node.connected=false;dispatch("disconnect",null,raw,dependents)};node.start=function(when,delay,duration){var time=toTime(node.context,when,delay);if(!node.connected)node.connect(node.context.destination);dispatch("start",time,raw,dependents);if(duration)node.stop(time+duration);return node};node.stop=function(when,delay){var time=toTime(node.context,when,delay);dispatch("stop",time,raw,dependents)};return node}var slice=Array.prototype.slice;var isArray=Array.isArray;function series(nodes){nodes=isArray(nodes)?nodes:slice.call(arguments);if(!nodes.length)return null;else if(nodes.length===1)return nodes[0];var first=nodes[0];var last=nodes.reduce(function(src,dest){src.connect(dest);return dest});first.connect=last.connect.bind(last);return lifecycle(first,nodes.slice(1))}function add(nodes){nodes=isArray(nodes)?nodes:slice.call(arguments);if(!nodes.length)return null;else if(nodes.length===1)return nodes[0];var context=nodes[0].context;var input=context.createGain();var output=context.createGain();nodes.forEach(function(node){if(node.numberOfInputs)input.connect(node);node.connect(output)});input.connect=output.connect.bind(output);return lifecycle(input,nodes)}function constant(value,context){var ctx=context||ac;var source=ctx.createBufferSource();source.loop=true;source.buffer=ctx.createBuffer(1,2,samplingRate(context));var data=source.buffer.getChannelData(0);data[0]=data[1]=value;return source}function gain(gain,context){var amp=(context||ac).createGain();return lifecycle(amp,[plug("gain",gain,amp)])}function mult(value,signal){return series(signal,gain(value))}function scale(min,max,source,ctx){var delta=max-min;return add(constant(min,ctx),series(constant(1,ctx),mult(delta,source)))}function osc(type,frequency,detune,context){var osc=(context||ac).createOscillator();osc.type=type;return lifecycle(osc,[plug("frequency",frequency,osc),plug("detune",detune,osc)])}const sine=osc.bind(null,"sine");const saw=osc.bind(null,"sawtooth");const square=osc.bind(null,"square");const triangle=osc.bind(null,"triangle");function filter(type,frequency,Q,detune,context){var filter=(context||ac).createBiquadFilter();filter.type=type;return lifecycle(filter,[plug("frequency",frequency,filter),plug("Q",Q,filter),plug("detune",detune,filter)])}const lowpass=filter.bind(null,"lowpass");const hipass=filter.bind(null,"highpass");const bandpass=filter.bind(null,"hipass");function detune(rate,cents,type,ctx){if(!isNum(rate))rate=10;if(!isNum(cents))cents=50;if(!type)type="sine";return mult(cents,osc(type,rate,ctx))}function isFn(x){return typeof x==="function"}function sample(buffer,loop,detune,context){var src=(context||ac).createBufferSource();src.buffer=isFn(buffer)?buffer():buffer;src.loop=loop;return lifecycle(src,[plug("detune",detune,src)])}function buffer(generators,samples,reverse,context){return function(){var data,generator,numOfChannels,n,ch,i;if(!Array.isArray(generators))generators=[generators];samples=samples||0;reverse=reverse===true;numOfChannels=generators.length;if(!context)context=ac;var buffer=context.createBuffer(numOfChannels,samples,samplingRate(context));for(ch=0;ch<numOfChannels;ch++){data=buffer.getChannelData(0);generator=generators[ch];for(i=0;i<samples;i++){n=reverse?samples-i:i;data[i]=generator(n,data[i-1],samples)}}return buffer}}function white(samples,loop,context){return sample(buffer(noiseGen,samples,false,context),loop,0,context)}function noiseGen(){return Math.random()*2-1}function mix(wet,fx){if(!isNum(wet))wet=.5;return add(gain(1-.5),series(fx,gain(wet)))}function tremolo(rate,type,ctx){type=type||"sine";return gain(osc(type,rate,ctx),ctx)}function dly(time,context){var dly=(context||ac).createDelay(5);return lifecycle(dly,[plug("delayTime",time,dly)])}function live(){Object.keys(window.SynthKit).forEach(function(name){window[name]=window.SynthKit[name]})}exports.live=live;exports.series=series;exports.add=add;exports.constant=constant;exports.gain=gain;exports.mult=mult;exports.scale=scale;exports.osc=osc;exports.sine=sine;exports.saw=saw;exports.square=square;exports.triangle=triangle;exports.filter=filter;exports.lowpass=lowpass;exports.hipass=hipass;exports.bandpass=bandpass;exports.detune=detune;exports.buffer=buffer;exports.sample=sample;exports.white=white;exports.samplingRate=samplingRate;exports.now=now;exports.mix=mix;exports.tremolo=tremolo;exports.dly=dly;Object.defineProperty(exports,"__esModule",{value:true})});